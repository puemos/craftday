defmodule Microcraft.Repo.Migrations.LetsGo do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:production_tasks, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :name, :text, null: false
      add :status, :text, null: false, default: "pending"
      add :notes, :text

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :product_id, :uuid, null: false
    end

    create table(:orders_orders, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :customer_name, :text, null: false
      add :status, :text, null: false, default: "pending"

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :customer_id, :uuid, null: false
    end

    create table(:orders_items, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :quantity, :decimal, null: false

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :order_id,
          references(:orders_orders,
            column: :id,
            name: "orders_items_order_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false

      add :product_id, :uuid, null: false
    end

    create table(:crm_customers, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
    end

    alter table(:orders_orders) do
      modify :customer_id,
             references(:crm_customers,
               column: :id,
               name: "orders_orders_customer_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    alter table(:crm_customers) do
      add :type, :text, null: false
      add :name, :text, null: false
      add :email, :text
      add :phone, :text
      add :address, :map

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
    end

    create table(:catalog_recipes, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :instructions, :text

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :product_id, :uuid, null: false
    end

    create table(:catalog_recipe_materials, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :quantity, :decimal, null: false

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :recipe_id,
          references(:catalog_recipes,
            column: :id,
            name: "catalog_recipe_materials_recipe_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false

      add :material_id, :uuid, null: false
    end

    create table(:catalog_products, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
    end

    alter table(:production_tasks) do
      modify :product_id,
             references(:catalog_products,
               column: :id,
               name: "production_tasks_product_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    alter table(:orders_items) do
      modify :product_id,
             references(:catalog_products,
               column: :id,
               name: "orders_items_product_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    alter table(:catalog_recipes) do
      modify :product_id,
             references(:catalog_products,
               column: :id,
               name: "catalog_recipes_product_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    alter table(:catalog_products) do
      add :name, :text, null: false
      add :status, :text, null: false, default: "idea"
      add :price, :decimal, null: false

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
    end

    create table(:accounts_users, primary_key: false) do
      add :confirmed_at, :utc_datetime_usec
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :email, :citext, null: false
      add :hashed_password, :text, null: false
      add :role, :text, null: false, default: "customer"
    end

    create unique_index(:accounts_users, [:email], name: "accounts_users_unique_email_index")

    create table(:accounts_tokens, primary_key: false) do
      add :created_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :jti, :text, null: false, primary_key: true
      add :subject, :text, null: false
      add :expires_at, :utc_datetime, null: false
      add :purpose, :text, null: false
      add :extra_data, :map

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
    end

    create table(:Warehouse_movements, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :quantity, :decimal, null: false
      add :reason, :text
      add :occurred_at, :utc_datetime, null: false

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :material_id, :uuid, null: false
    end

    create table(:Warehouse_materials, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
    end

    alter table(:catalog_recipe_materials) do
      modify :material_id,
             references(:Warehouse_materials,
               column: :id,
               name: "catalog_recipe_materials_material_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    alter table(:Warehouse_movements) do
      modify :material_id,
             references(:Warehouse_materials,
               column: :id,
               name: "Warehouse_movements_material_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    alter table(:Warehouse_materials) do
      add :name, :text, null: false
      add :sku, :text, null: false
      add :unit, :text, null: false
      add :price, :decimal, null: false
      add :minimum_stock, :decimal
      add :maximum_stock, :decimal

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
    end

    create unique_index(:Warehouse_materials, [:name],
             name: "Warehouse_materials_unique_name_index"
           )

    create unique_index(:Warehouse_materials, [:sku],
             name: "Warehouse_materials_unique_sku_index"
           )
  end

  def down do
    drop_if_exists unique_index(:Warehouse_materials, [:sku],
                     name: "Warehouse_materials_unique_sku_index"
                   )

    drop_if_exists unique_index(:Warehouse_materials, [:name],
                     name: "Warehouse_materials_unique_name_index"
                   )

    alter table(:Warehouse_materials) do
      remove :updated_at
      remove :inserted_at
      remove :maximum_stock
      remove :minimum_stock
      remove :price
      remove :unit
      remove :sku
      remove :name
    end

    drop constraint(:Warehouse_movements, "Warehouse_movements_material_id_fkey")

    alter table(:Warehouse_movements) do
      modify :material_id, :uuid
    end

    drop constraint(:catalog_recipe_materials, "catalog_recipe_materials_material_id_fkey")

    alter table(:catalog_recipe_materials) do
      modify :material_id, :uuid
    end

    drop table(:Warehouse_materials)

    drop table(:Warehouse_movements)

    drop table(:accounts_tokens)

    drop_if_exists unique_index(:accounts_users, [:email],
                     name: "accounts_users_unique_email_index"
                   )

    drop table(:accounts_users)

    alter table(:catalog_products) do
      remove :updated_at
      remove :inserted_at
      remove :price
      remove :status
      remove :name
    end

    drop constraint(:catalog_recipes, "catalog_recipes_product_id_fkey")

    alter table(:catalog_recipes) do
      modify :product_id, :uuid
    end

    drop constraint(:orders_items, "orders_items_product_id_fkey")

    alter table(:orders_items) do
      modify :product_id, :uuid
    end

    drop constraint(:production_tasks, "production_tasks_product_id_fkey")

    alter table(:production_tasks) do
      modify :product_id, :uuid
    end

    drop table(:catalog_products)

    drop constraint(:catalog_recipe_materials, "catalog_recipe_materials_recipe_id_fkey")

    drop table(:catalog_recipe_materials)

    drop table(:catalog_recipes)

    alter table(:crm_customers) do
      remove :updated_at
      remove :inserted_at
      remove :address
      remove :phone
      remove :email
      remove :name
      remove :type
    end

    drop constraint(:orders_orders, "orders_orders_customer_id_fkey")

    alter table(:orders_orders) do
      modify :customer_id, :uuid
    end

    drop table(:crm_customers)

    drop constraint(:orders_items, "orders_items_order_id_fkey")

    drop table(:orders_items)

    drop table(:orders_orders)

    drop table(:production_tasks)
  end
end
