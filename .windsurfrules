1. My app is built with Elixir, Phoenix, LiveView, and Ash Framework
2. All Ash resources are defined in the /lib/craftday/resources directory
3. Follow Elixir naming conventions: snake_case for files and variables, CamelCase for modules
4. LiveView modules should be placed in /lib/craftday_web/live
5. Use Ash extensions for common patterns rather than custom implementations
6. Follow Phoenix Context pattern for business logic organization
7. Keep LiveView modules focused on UI concerns only
8. Use Ash resources for all data persistence operations
9. Don't modify schema migrations directly - use Ash resources to generate them
10. Test LiveView components with Phoenix.LiveViewTest
11. Always use Phoenix routes rather than hardcoded paths
12. Define LiveView event handlers clearly with handle_event/3
13. Use Ash-provided hooks for authorization and validation
14. Prefer pipe operator |> for expressing data transformations
15. Keep LiveView templates in separate .heex files when appropriate
16. Use PubSub for real-time communication between LiveViews
17. Follow Ash documentation patterns for resource relationships
18. Avoid direct database access - always go through Ash resources
19. Use proper LiveView lifecycle callbacks (mount, handle_params, etc.)
20. Keep business logic out of templates
